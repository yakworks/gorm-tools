# circleCI build file
version: 2.1
jobs:
  build:
    docker:
      - image: yakworks/circle:jdk11
    resource_class: 'xlarge'

    steps:
      - checkout

      - run: &gradle-cache-key make gradle.cache-key-file
      - restore_cache: &gradle-cache-restore
          key: gradle-{{ checksum "cache-key.tmp" }}
      - restore_cache: &gradle-wrapper-cache-restore
          key: gradle-wrapper75-{{ checksum "gradlew" }}
      - restore_cache: &build-cache-restore
          key: build-{{ checksum "version.properties" }}

      - run: ./gradlew classes --no-daemon

      - save_cache:
          paths: ["~/.gradle/wrapper"]
          key: gradle-wrapper75-{{ checksum "gradlew" }}
      - save_cache:
          paths: [ "~/.gradle/caches" ]
          key: gradle-{{ checksum "cache-key.tmp" }}

      - run:
          name: ✔︎ -- Test
          command: ./gradlew check --no-daemon

      # merge test results to store in circle
      - run:
          name: ✔︎ -- Merge Test Results
          when: always
          command: make gradle.merge-test-results

      - store_test_results:
          path: build/test-results/
#      - store_artifacts:
#          path: build/reports/
#          destination: /
      - save_cache:
          paths: [
            ".gradle", ".build-cache", "./build", "./commons/build",
            "./gorm-test-domain/build", "./gorm-test-support/build", "./gorm-tools/build",
            "./gorm-tools-csv/build", "./gorm-tools-rest/build", "./gorm-tools-security/build",
            "./rally-domain/build", "./rally-security/build"
          ]
          key: build-{{ checksum "version.properties" }}

  ship-gh-pages:
    docker:
      - image: yakworks/docmark

    steps:
      - checkout
      # download vault and decrypts
      - run: BOT_SIGN_COMMITS=false make git.config-bot-user # configs the bot user for git
      - run: BOT_SIGN_COMMITS=false make ship.gh-pages

  ship-it:
    docker:
      - image: yakworks/circle:jdk11
    resource_class: 'medium+'

    steps:
      - checkout
      - run: *gradle-cache-key
      - restore_cache: *gradle-wrapper-cache-restore
      - restore_cache: *gradle-cache-restore
      - restore_cache: *build-cache-restore

      # setup the docker
      # - setup_remote_docker
      # - run: apk add docker

      # download vault and decrypts
      - run: make vault.decrypt
      # sets up git config, kubectl and docker login
      - run: make ship.authorize
      # publish libs, push docker, kubernetes deploy
      - run: make ship.release
      # add to changelog, creates a release to github, rolls version.props and pushes changes to github
      # only happens if IS_RELEASABLE, meaning if its a snapshot then it skips this
      - run: make ship.version

workflows:
  build-flow:
    jobs:
      - build:
          context: bot-context #context with shared ENV vars
      - ship-gh-pages:
          context: bot-context
          requires: [ build ]
          filters: { branches: { only: [ master, /release\/.*/, dev ] } }
      - ship-it:
          context: bot-context
          requires: [build]
          filters: { branches: { only: [ master, /release\/.*/, dev ] } }
