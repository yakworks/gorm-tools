get:
  tags: [ ${endpoint} ]
  summary: ${capitalName} list
  description: Query and retrieve a ${capitalName} list
  operationId: get${capitalName}List
  parameters:
    - \$ref: '${baseDir}components/parameters/page.yaml'
    - \$ref: '${baseDir}components/parameters/max.yaml'
    - \$ref: '${baseDir}components/parameters/q.yaml'
    - \$ref: '${baseDir}components/parameters/sort.yaml'
    - \$ref: '${baseDir}components/parameters/order.yaml'
  responses:
    '200':
      description: ${capitalName} Pager Resource
      content:
        application/json:
          schema:
            allOf:
              - \$ref: '${baseDir}components/schemas/Pager.yaml'
              - properties:
                  data:
                    description: ${capitalName} list
                    type: array
                    items: { \$ref: '${baseDir}models/${modelName}.yaml' }
    '403': { \$ref: '${baseDir}components/responses/403_Forbidden.yaml' }

post:
  tags: [ ${endpoint} ]
  summary: Create a ${capitalName}
  description: Create a new ${capitalName}
  operationId: create${capitalName}
  requestBody:
    description: ${capitalName} resource
    required: true
    content:
      application/json:
        schema:
          \$ref: '${baseDir}models/${modelName}_Create.yaml'
  responses:
    '201':
      description: ${capitalName} Resource
      content:
        application/json:
          schema:
            \$ref: '${baseDir}models/${modelName}.yaml'
    '403': { \$ref: '${baseDir}components/responses/403_Forbidden.yaml' }
    '422': { \$ref: '${baseDir}components/responses/422_ValidationError.yaml' }
