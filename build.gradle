//It all starts here
buildscript {
  repositories {
    mavenLocal()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://repo.grails.org/grails/core" }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath "org.grails.plugins:hibernate5:$vGormHibernate"
    // classpath "org.grails.plugins:views-gradle:2.0.2"
    classpath "org.yakworks:gradle-plugins:$vShipyak"
  }
}

group = "org.yakworks"

apply plugin: 'yakworks.shipyak' //our opinionated defaults for gradle groovy & grails projects

subprojects {
  repositories {
    maven { url "https://repo.grails.org/grails/core" }
  }

  ['org.grails.grails-plugin', 'org.grails.grails-web'].each { plugId -> plugins.withId(plugId) {

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    dependencies {
      developmentOnly("org.springframework.boot:spring-boot-devtools")
      compile "org.springframework.boot:spring-boot-starter-logging"
      compile "org.springframework.boot:spring-boot-autoconfigure"
      compile "org.grails:grails-core"
      compile "org.springframework.boot:spring-boot-starter-tomcat"

      compile "org.grails:grails-web-boot"

      compile "org.grails:grails-logging"
      compile "org.grails:grails-plugin-databinding"
      compile "org.grails:grails-plugin-services"

      compile "org.grails.plugins:events"

      // compile("org.grails.plugins:async"){
      //   exclude group: 'org.grails', module: 'grails-plugin-controllers'
      // }

      // compile "io.activej:activej-http:5.0-rc3"
      // compile "io.activej:activej-launchers-common:5.0-rc3"
      compile "io.activej:activej-launchers-http:5.0-rc3"
      compile "io.activej:activej-boot:5.0-rc3"
      compile "io.activej:activej-promise:5.0-rc3"

      // compile "org.grails:grails-datastore-gorm:7.0.8.RELEASE"
      compile ("org.grails.plugins:hibernate5")
      //   {
      //   exclude group: 'org.grails', module: 'grails-datastore-gorm'
      // }

      compile 'org.codehaus.groovy:groovy-dateutil'

      runtime "com.h2database:h2"
      testRuntime "com.zaxxer:HikariCP:$vHikari"

      compileOnly "io.micronaut:micronaut-inject-groovy"

      testCompile "org.mockito:mockito-core"
      testCompile "org.grails:grails-gorm-testing-support"
      testCompile "org.grails:grails-web-testing-support"
      testCompile "org.grails.plugins:build-test-data:$vBuildTestData"
      testCompile "org.grails:views-json-testing-support:$vViews"

      //html unit for geb rest testing
      // testCompile "org.grails:grails-datastore-rest-client"
      // testCompile "org.grails.plugins:geb"
      // testCompile "org.seleniumhq.selenium:htmlunit-driver:$vHtmlunit"
      // testCompile "net.sourceforge.htmlunit:htmlunit:$vHtmlunit"
      // testCompile "org.seleniumhq.selenium:selenium-api:$vSelenium"
      // testCompile "org.seleniumhq.selenium:selenium-support:$vSelenium"
      // testCompile "org.seleniumhq.selenium:selenium-remote-driver:$vSelenium"
    }

    // Defaults from https://github.com/radarsh/gradle-test-logger-plugin
    testlogger {
      // theme 'standard'
      showExceptions true
      showStandardStreams = true //shows the printlns in console
      showPassed false
      showSkipped true
      showFailed true
      // slowThreshold 2000 //if tests take longer than this will show time it took
      // showSummary true
      // showSimpleNames false
      // showPassed true
      // showSkipped true
      // showFailed true
      // showPassedStandardStreams true
      // showSkippedStandardStreams true
      // showFailedStandardStreams true
    }
  }} //end of plugins.withId iteration

  configurations {
    testCompile.extendsFrom compileOnly //includes the compileOnly in tests too so we don't have to list twice
    all {
      resolutionStrategy.cacheChangingModulesFor 1, 'seconds' //when changing = true this sets the cache time
    }
    developmentOnly
    runtimeClasspath {
      extendsFrom developmentOnly
    }
  }

  // sets the path to sys properties so we can use it find grails-app/conf during AST
  plugins.withId('groovy') {
    compileGroovy {
      groovyOptions.fork = true
      groovyOptions.forkOptions.jvmArgs = ['-Dgradle.projectDir=' + project.projectDir.absolutePath]
    }
  }
  tasks.withType(Test) {
    //so that we can use in config and share resources/rootlocation across projects for testing
    systemProperty "gradle.rootProjectDir", rootProject.projectDir.absolutePath
    systemProperty "gradle.projectDir", project.projectDir.absolutePath
  }
}

ext.codenarcRuleset= '''
  // getRule('Println').enabled = false
  // getRule('AbcMetric').enabled = false
'''
