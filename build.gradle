plugins {
  id "yakworks.shipyak"
  id "io.github.gradle-nexus.publish-plugin"
  // the transative dep when applying shipyak gets goofy if we dont do this, these are included but not applied to root
  id "org.grails.grails-web" apply false
  id 'org.grails.grails-plugin' apply false
}

group = "org.yakworks"

//our opinionated defaults for gradle groovy & grails projects
// apply plugin: 'yakworks.shipyak'
// apply plugin: "io.github.gradle-nexus.publish-plugin"

if(!isSnapshot) {
  nexusPublishing {
    repositories {
      sonatype()
    }
  }
}

allprojects {
  repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://build.shibboleth.net/nexus/content/repositories/releases/" } //for opensaml
    maven {
      url "http://repo.9ci.com/oss-snapshots"
      allowInsecureProtocol = true
      mavenContent {
        snapshotsOnly()
      }
    }
    maven { url "http://repo.9ci.com/public-libs"; allowInsecureProtocol = true }
    // maven { url "https://repo.spring.io/milestone" mavenContent { snapshotsOnly() } }

  }

  //info task to show version overrides that be ovveridden for spring/grails bom
  tasks.register('dependencyManagementProperties') {
    doLast {
      dependencyManagement
        .importedProperties
        .toSorted()
        .each { property -> println property }
    }
  }

}
subprojects { subprj ->

  group = "org.yakworks"

  // get prop with default if null, converts to boolean
  Closure getProp = { pname, defualtv -> (subprj.findProperty(pname) ?: defualtv).toBoolean() }

  ext { // see gradle.properties in sub-projects
    //default true for isGormLibrary and isPublishable, set to false in gradle.props
    isPublishable = getProp('isPublishable', true)
    isGormLibrary = getProp('isGormLibrary', true)
    isExample = getProp('isExample', false)
  }
  apply plugin: 'groovy'
  // apply from: "${rootDir}/gradle/compile.gradle"
  //
  // // if its a lib then setup gpg signing, see signing.gnupg.keyName
  // if (isPublishable){
  //   apply from: "${rootDir}/gradle/publish.gradle"
  // }
}

ext.codenarcRuleset= '''
  // getRule('Println').enabled = false
  // getRule('AbcMetric').enabled = false
  getRule('FieldName').enabled = false
  getRule('SynchronizedMethod').enabled = false
  getRule('UnnecessaryDotClass').enabled = false
  getRule('ExplicitCallToEqualsMethod').enabled = false
  getRule('ExplicitHashSetInstantiation').enabled = false
  getRule('AssignmentToStaticFieldFromInstanceMethod').enabled = false
  getRule('UnnecessaryCollectCall').enabled = false
  getRule('UnnecessaryToString').enabled = false
'''
