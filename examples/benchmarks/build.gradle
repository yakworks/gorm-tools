plugins {
  id 'io.spring.dependency-management'
  id 'org.springframework.boot'
  id "org.grails.grails-web"
}

apply from: "${rootDir}/gradle/compile.gradle"
apply from: "${rootDir}/gradle/example.gradle"
// apply from: "${rootDir}/gradle/test-unit.gradle"
// apply from: "${rootDir}/gradle/test-integration.gradle"

dependencies {

  implementation "org.grails:grails-plugin-url-mappings"
  implementation "org.grails:grails-plugin-rest"
  implementation "org.grails:grails-plugin-codecs"
  implementation "org.grails:grails-plugin-interceptors"

  implementation "org.grails.plugins:async"

  // compile "org.grails.plugins:views-json:$vViews"
  // compile "org.grails.plugins:views-json-templates:$vViews"

  console "org.grails:grails-console"
  profile "org.grails.profiles:rest-api"

  implementation project(":gorm-tools")
  implementation project(":gorm-security")
  implementation project(":rally-domain")
  implementation project(":gorm-rest")

  implementation "com.opencsv:opencsv:$vOpenCsv"

  // runtime "org.glassfish.web:el-impl:2.1.2-b03"
  runtimeOnly "com.h2database:h2:$vH2"
  runtimeOnly "javax.xml.bind:jaxb-api:2.3.1"
  runtimeOnly "com.zaxxer:HikariCP:$vHikari"

  // testCompile "io.micronaut:micronaut-http-client"
  //for rest api testing
  testImplementation "com.squareup.okhttp3:okhttp:$vOkhttp"
  //okhttp3 needs this
  testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$vKotlin"
}

bootRun {
  //  ignoreExitValue true
  jvmArgs('-Dspring.output.ansi.enabled=always', '-noverify', '-XX:TieredStopAtLevel=1', '-Xmx1024m')
  sourceResources sourceSets.main
  String springProfilesActive = 'spring.profiles.active'
  systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

bootJar.enabled = true
bootJar.archiveFileName = 'benchmarks.jar'
