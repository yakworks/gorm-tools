
buildscript {
  repositories {
    mavenLocal()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://repo.grails.org/grails/core" }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath "org.grails.plugins:hibernate5:$vGormHibernate"
    classpath "org.grails.plugins:views-gradle:$vViews"
  }
}

// apply plugin:'yakworks.grails-web'
// apply plugin:"war"
// apply plugin:'yakworks.grails-web'
apply plugin:"groovy"
//apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.plugins.views-json"


dependencies {
  // compile "org.springframework.boot:spring-boot-starter-logging"
  // compile "org.springframework.boot:spring-boot-autoconfigure"
  // compile "org.grails:grails-core"
  // compile "org.springframework.boot:spring-boot-starter-actuator"
  compile "org.springframework.boot:spring-boot-starter-tomcat"
  compile "org.grails:grails-plugin-url-mappings"
  compile "org.grails:grails-plugin-rest"
  compile "org.grails:grails-plugin-codecs"
  compile "org.grails:grails-plugin-interceptors"
  compile "org.grails:grails-plugin-services"
  compile "org.grails:grails-plugin-datasource"
  compile "org.grails:grails-plugin-databinding"
  compile "org.grails:grails-web-boot"

  compile "org.grails:grails-logging"
  compile "org.grails.plugins:cache"
  compile "org.grails.plugins:events"
  compile "org.grails.plugins:async"
  compile "org.grails.plugins:external-config:$vExternalConfig"

  compile "org.grails.plugins:hibernate5"
  compile "org.hibernate:hibernate-core:$vHibernate"
  compile "org.hibernate:hibernate-ehcache:$vHibernate"

  compile "org.grails.plugins:views-json:$vViews"
  compile "org.grails.plugins:views-json-templates:$vViews"

  console "org.grails:grails-console"
  profile "org.grails.profiles:rest-api"

  compile project(":gorm-tools")
  compile project(":gorm-tools-security")
  compile project(":gorm-tools-rest")
  compile project(":rally-domain")
  // compile project(":testify")

  // compile 'org.grails.plugins:csv:1.0'
  compile 'net.sf.opencsv:opencsv:2.3'

  // compile "org.grails.plugins:spring-security-rest:$vSpringSecurityRest"
  // compile "org.grails.plugins:spring-security-rest-grailscache:$vSpringSecurityRest"
  // compile "org.grails.plugins:spring-security-rest-gorm:$vSpringSecurityRest"
  // runtime "com.h2database:h2"
  // runtime "com.zaxxer:HikariCP:3.4.5"

  // runtime "org.glassfish.web:el-impl:2.1.2-b03"
  runtime "com.h2database:h2"
  runtime "javax.xml.bind:jaxb-api:2.3.1"
  runtime "com.zaxxer:HikariCP:$vHikari"

  // testCompile "io.micronaut:micronaut-http-client"
  //for rest api testing
  testCompile "com.squareup.okhttp3:okhttp:$vOkhttp"
  //okhttp3 needs this
  testCompile "org.jetbrains.kotlin:kotlin-stdlib:$vKotlin"
}

bootRun {
  //  ignoreExitValue true
  jvmArgs('-Dspring.output.ansi.enabled=always', '-noverify', '-XX:TieredStopAtLevel=1', '-Xmx1024m')
  sourceResources sourceSets.main
  String springProfilesActive = 'spring.profiles.active'
  systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

bootJar.enabled = true
bootJar.archiveFileName = 'benchmarks.jar'
