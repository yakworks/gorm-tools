apply plugin:'yakworks.grails-web'

apply from: "${rootDir}/gradle/compile.gradle"
apply from: "${rootDir}/gradle/hibernate.gradle"
apply from: "${rootDir}/gradle/test-unit.gradle"
apply from: "${rootDir}/gradle/test-integration.gradle"

repositories {
  maven { url "https://build.shibboleth.net/nexus/content/repositories/releases/" } //for opensaml
}

dependencies {
  console "org.grails:grails-console"
  profile "org.grails.profiles:rest-api"

  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  // implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  //implementation 'org.springframework.boot:spring-boot-starter-mustache'

  implementation('pl.allegro.tech.boot:handlebars-spring-boot-starter:0.4.1')

  // implementation "com.github.jknack:handlebars:$vHandlebars"
  // implementation "com.github.jknack:handlebars-springmvc:$vHandlebars"
  // implementation "com.github.jknack:handlebars-guava-cache:$vHandlebars"

  //SHIRO, not used yet
  ['aspectj', 'core', 'spring', 'web'].each {
    implementation "org.apache.shiro:shiro-$it:$vShiro"
  }

  //APACHE IGNITE
  implementation("org.apache.ignite:ignite-core:2.17.0")
  //implementation("org.apache.ignite:ignite-kubernetes:2.17.0")
  //implementation("org.apache.ignite:ignite-indexing:2.17.0")
  implementation("org.apache.ignite:ignite-spring:2.17.0")
  implementation("org.apache.ignite:ignite-spring-cache-ext:1.0.0")
  implementation("org.apache.ignite:ignite-slf4j:2.17.0")
  //implementation("org.apache.ignite:ignite-spring-boot-autoconfigure-ext:1.0.0")

  // === Spring Sec ===
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
  implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
   //SAML and OAUTH
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
  implementation 'org.springframework.security:spring-security-saml2-service-provider'
  constraints {
    implementation "org.opensaml:opensaml-core:4.1.1"
    implementation "org.opensaml:opensaml-saml-api:4.1.1"
    implementation "org.opensaml:opensaml-saml-impl:4.1.1"
  }
  // === END Spring Sec ===

  // === GRAILS ===
  implementation "org.grails:grails-plugin-rest"
  implementation "org.grails:grails-plugin-url-mappings"
  implementation "org.grails:grails-logging"
  implementation "org.grails:grails-plugin-interceptors"
  implementation "org.grails:grails-web-boot"
  // implementation "org.grails:grails-web-url-mappings"
  implementation "org.grails.plugins:async"

  implementation "org.grails.plugins:hibernate5:$vGormHibernate"
  implementation "org.hibernate:hibernate-core:$vHibernate"
  // compile "org.hibernate:hibernate-ehcache:$vHibernate"

  implementation project(":gorm-rest")
  implementation project(":rally-domain")
  implementation project(":gorm-test-domain")

  //Hazelcast
  runtimeOnly "com.hazelcast:hazelcast-hibernate53:$vHazelcastHib"
  implementation "com.hazelcast:hazelcast:$vHazelcast"
  implementation "com.hazelcast:hazelcast-spring:$vHazelcast"
  implementation "com.github.ben-manes.caffeine:caffeine:$vCaffeine"

  implementation "com.h2database:h2:$vH2"
  runtimeOnly "javax.xml.bind:jaxb-api:2.3.1"
  runtimeOnly "com.zaxxer:HikariCP:$vHikari"

  //TODO look into this so we are using jdk11, can remove this when we upgrade to spring 6 as its built in.
  // this uses the HttpClient thats built into java 11 for WebClient.
  // testImplementation 'com.integralblue:java-httpclient-webclient-spring-boot-starter:1.0.0'

  //for original rest api testing, WebClient uses the spring stuff
  testImplementation "com.squareup.okhttp3:okhttp:$vOkhttp"
  //testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$vKotlin" //okhttp3 needs this

  testImplementation project(":gorm-test-support")
  testImplementation "org.grails:grails-web-testing-support:$vGrailsTesting"

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'

  testImplementation("org.spockframework:spock-core:${vSpock}")
  testImplementation("org.spockframework:spock-spring:${vSpock}")

  //for the OrgWebApiSpec, POC alternative for OkHttp
  testImplementation "org.springframework.boot:spring-boot-starter-webflux"
}

bootRun {
  //  ignoreExitValue true
  jvmArgs('-Dspring.output.ansi.enabled=always', '-noverify', '-XX:TieredStopAtLevel=1', '-Xmx1024m')
  sourceResources sourceSets.main
  String springProfilesActive = 'spring.profiles.active'
  systemProperty springProfilesActive, System.getProperty(springProfilesActive)
  //fix hazel cast Not supported: "http://javax.xml.XMLConstants/property/accessExternalDTD"
  // TODO the pac4j dependency adds some XML lib that is screwing this up
  // systemProperty 'hazelcast.ignoreXxeProtectionFailures', true
  //set the sys properties so BuildSupport statics can see them. Should not really be used or needed in prod
  systemProperty "project.rootProjectDir", rootProject.projectDir.absolutePath
  systemProperty "project.projectDir", project.projectDir.absolutePath
  //fixes the hazelcast when running offline
  systemProperty "java.net.preferIPv4Stack", true
}

bootJar.enabled = true
bootJar.archiveFileName = 'rally-api.jar'

integrationTest.doFirst {
  //fix hazel cast Not supported: "http://javax.xml.XMLConstants/property/accessExternalDTD"
  // TODO the pac4j dependency adds some XML lib that is screwing this up
  systemProperty 'hazelcast.ignoreXxeProtectionFailures', true
}

springBoot {
  mainClass = 'yakworks.rally.SpringApplication'
}
