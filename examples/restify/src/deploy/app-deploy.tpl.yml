apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APP_KEY} # a name for the deployment
  namespace: ${APP_KUBE_NAMESPACE}
  labels:
    app: ${APP_KEY} # labels are kind of like tags
    version: ${BUILD_VERSION}
spec:
  replicas: 1 # tells deployment to run 1 pods matching the template
  selector:
    matchLabels:
      app: ${APP_KEY} # points to label key in pod template below
  template: # pod template
    metadata:
      name: ${APP_KEY}-pod
      labels:
        app: ${APP_KEY} # the pod key label, labels are like tags
    spec: # containers in the pod
      imagePullSecrets:
      - name: 9cibot-dockerhub
      containers:
      - image: ${APP_DOCKER_URL}
        imagePullPolicy: Always
        name: ${APP_KEY}-docker-app #just normal docker name
        # uncomment the LOGGING_CONFIG to enable
        env:
          - name: APP_PROPS
            value: |+
              logging.config=/app/logging/logback.groovy
              grails.serverURL=https://${APP_KUBE_INGRESS_URL}

        ports:
          - containerPort: 8080
            name: server
          - containerPort: 8081
            name: jmx
        volumeMounts:
          - mountPath: "/app/logging"
            name: ${APP_KEY}-cfgmap-logging
      volumes:
        - name: ${APP_KEY}-cfgmap-logging
          configMap:
            name: ${APP_KEY}-cfgmap-logback

---
apiVersion: v1
kind: Service
metadata:
  name: ${APP_KEY} # a name for the service
  namespace: ${APP_KUBE_NAMESPACE}
  labels:
    app: ${APP_KEY} # tag the app:grello label onto the service as well
    version: ${BUILD_VERSION}
spec:
  #type: NodePort
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: ${APP_KEY} # points to the label key for deployment

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${APP_KEY}
  namespace: ${APP_KUBE_NAMESPACE}
  labels:
    app: ${APP_KEY} # add the app=grello label onto the service as well
    version: ${BUILD_VERSION}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: ${APP_KUBE_INGRESS_URL}
    http:
      paths:
      - backend:
          service:
            name: ${APP_KEY}
            port:
              number: 8080
        pathType: ImplementationSpecific
  tls:
  - hosts:
      - ${APP_KUBE_INGRESS_URL}
    # secretName: 9ci-io-wild
