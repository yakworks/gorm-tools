apply plugin: 'groovy'

plugins.withId('java') {
  sourceCompatibility = "$javaCompatibility"
  targetCompatibility = "$javaCompatibility"
  tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
  }
  configurations {
    //includes the compileOnly in tests too so we don't have to list twice
    testImplementation.extendsFrom compileOnly
    // all {
    //   resolutionStrategy.cacheChangingModulesFor 0, 'seconds' //when changing = true this sets the cache time
    // }
  }
}

plugins.withId('groovy') {
  tasks.withType(GroovyCompile) {
    // options.debug = true
    configure(groovyOptions) {
      // verbose = true
      // sets the path to sys properties so we can use it find grails-app/conf during AST
      forkOptions.jvmArgs = ['-Xmx1524m', '-Dproject.projectDir=' + project.projectDir.absolutePath]
      // '--illegal-access=permit', '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
    }
  }
}

// here so we can lock transitive versions in deps
configurations.all {
  resolutionStrategy.eachDependency { DependencyResolveDetails details ->
    // if (details.requested.group == 'org.springframework' && details.requested.name == 'some-library') {
    if (details.requested.group == 'org.springframework') {
      details.useVersion project['spring.version']
    }
    if (details.requested.group == 'org.springframework.boot') {
      details.useVersion project['springBootVersion']
    }
    if (details.requested.group == 'org.springframework.security') {
      details.useVersion project['spring-security.version']
    }
    if (details.requested.group.startsWith('com.fasterxml.jackson')) {
      details.useVersion project['vJackson']
    }
    if (details.requested.group.startsWith('org.yaml')) {
      details.useVersion project['vSnakeYaml']
    }
    if (details.requested.group.startsWith('org.codehaus.groovy')) {
      details.useVersion project['groovyVersion']
    }
    if (details.requested.group.startsWith('io.micronaut.spring')) {
      details.useVersion project['micronaut.spring.version']
    }
    //grails locks
    if (details.requested.module.name.startsWith('grails-plugin-interceptors')) {
      details.useVersion project['grailsVersion']
    }
    if (details.requested.module.name.startsWith('grails-plugin-datasource')) {
      details.useVersion project['grailsVersion']
    }
    if (details.requested.module.name.startsWith('grails-plugin-rest')) {
      details.useVersion project['grailsVersion']
    }
    if (details.requested.module.name == 'grails-datastore-gorm-test') {
      details.useVersion project['gorm.version']
    }
    if (details.requested.module.name == 'grails-datastore-web') {
      details.useVersion project['gorm.version']
    }
    if (details.requested.module.name == 'grails-datastore-gorm') {
      details.useVersion project['gorm.version']
    }
    if (details.requested.module.name == 'grails-datastore-gorm-support') {
      details.useVersion project['gorm.version']
    }
    if (details.requested.module.name == 'grails-datastore-gorm-validation') {
      details.useVersion project['gorm.version']
    }

  }
}

