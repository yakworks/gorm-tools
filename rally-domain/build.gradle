apply plugin: "yakworks.grails-plugin"

group = "org.yakworks"

dependencies {
  //console "org.grails:grails-console"
  //compile "org.springframework.boot:spring-boot-starter-logging"
  compileOnly project(":gorm-tools")
  compileOnly project(":gorm-tools-security")
  // compileOnly "org.grails.plugins:converters:$vConverters"
  //plugins
  compileOnly "org.grails.plugins:view-tools:$vViewTools"
  //used for json parsing but require it to be added to project that uses this
  compileOnly("org.grails.plugins:views-json:$vViews") {
    //exclude controllers since it messes with the domain compile and map constructor
    exclude group:"org.grails", module: "grails-plugin-controllers"
  }
  compileOnly "org.grails.plugins:views-json-templates:$vViews"
  compileOnly "net.sf.opencsv:opencsv:$vOpenCsv"
  //libs
  compileOnly "commons-io:commons-io:$vCommonsIO"
  //jasper uses itext 2.1.7 which uses bouncy 138, so until we sort that out we keep it stuck there
  //used only in commons password stuff
  compileOnly "bouncycastle:bcprov-jdk14:138"

  // for the nine.rally.testing helpers
  compileOnly "org.grails:grails-gorm-testing-support"
  compileOnly "org.grails.plugins:build-test-data:$vBuildTestData"
}

//XXX for now we exlude the Orgs and force and implementation of them in app until we figure out how to use shadowJar
// and not have it mess with intellij

// jar {
//   exclude('yakworks/rally/orgs/model/Org.class')
//   exclude('yakworks/rally/orgs/repo/OrgRepo.class')
//   exclude('yakworks/rally/orgs/repo/OrgRepo$*.class')
//   exclude('yakworks/rally/orgs/model/Org$*.class') //also the closure ones
//

// sourceSets.main.resources.srcDirs += "src/main/groovy"

// task printSourceSetInformation(){
//   doLast{
//     println "["+sourceSets.main.name+"]"
//     println "${sourceSets.main.resources.srcDirs}"
//     // sourceSets.each { srcSet ->
//     //   println "["+srcSet.name+"]"
//     //   print "-->Source directories: "+srcSet.allResources.srcDirs+"\n"
//     //   print "-->Output directories: "+srcSet.output.classesDirs.files+"\n"
//     //   println ""
//     // }
//   }
// }
